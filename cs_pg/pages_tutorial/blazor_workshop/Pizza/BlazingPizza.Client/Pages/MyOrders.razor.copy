@page "/myorders"
@attribute [Authorize]
@inject OrdersClient OrdersClient

<PageTitle>Blazing Pizza - My order</PageTitle>
<div class="main">
    @if (orderWithStatus == null)
    {
        @* Csharp markup, not html *@
        <text>Loading....</text>
    }
    else if (!orderWithStatus.Any())
    {
        <h2>No orders placed</h2>
        <a class="btn btn-success" href="">Order some pizza</a>
    }
    else
    {
        <div class="list-group orders-list">
            @* Csharp markup, not html *@
            @* <text>Show Order....???</text> *@
            @foreach (var item in orderWithStatus)
            {
                <div class="list-group-item">
                    <div class="col">
                        <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                        Items:
                        <strong>@item.Order.Pizzas.Count()</strong>;
                        Total price:
                        <strong>Â£@item.Order.GetFormattedTotalPrice()</strong>
                    </div>
                    <div class="col">
                        Status: <strong>@item.StatusText</strong>
                    </div>
                    <div class="col flex-grow-0">
                        <a href="myorders/@item.Order.OrderId" class="btn btn-success">
                            Track &gt;
                        </a>
                    </div>
                </div>
            }
        </div>
    }

</div>

@code {
    @* IEnumerable<OrderWithStatus> orderWithStatus;

protected override async Task OnParametersSetAsync()
@* similar to prop change in react *@
    @* {
orderWithStatus = await HttpClient.GetFromJsonAsync<List<OrderWithStatus>>("orders");
orderWithStatus = await OrdersClient.GetOrders();

} *@

    async Task<IEumerable<OrderWithStatus>> LoadOrders()
    {
        var ordersWithStatus = Enumerable.Empty<ordersWithStatus>();
        try
        {
            ordersWithStatus = await OrdersClient.GetOrders();
        }
        catch (Exception ex)
        {
            ex.Redirect();
        }
        return ordersWithStatus
    }

}